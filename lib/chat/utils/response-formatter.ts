import { StructuredResponse, ResponseSegment } from "../validation/chat-schema";

export interface FormattedSegment extends ResponseSegment {
  id: string;
  cssClass: string;
}

export function formatStructuredResponseForUI(
  structuredResponse: StructuredResponse,
  antiHallucinationEnabled: boolean = true
): FormattedSegment[] {
  return structuredResponse.response.map((segment, index) => ({
    ...segment,
    id: `segment-${index}`,
    cssClass: antiHallucinationEnabled
      ? getSegmentCssClass(segment)
      : "text-slate-200",
  }));
}

function getSegmentCssClass(segment: ResponseSegment): string {
  if (segment.type === "from_file") {
    // Green tones for content from files
    if (segment.confidence >= 0.9) {
      return "text-emerald-300 bg-emerald-900/20 border-emerald-700/30";
    } else if (segment.confidence >= 0.7) {
      return "text-emerald-400 bg-emerald-900/15 border-emerald-700/20";
    } else {
      return "text-emerald-500 bg-emerald-900/10 border-emerald-700/10";
    }
  } else {
    // Neutral tones for generated content
    return "text-slate-300 bg-slate-800/20 border-slate-600/20";
  }
}

export function getFileUsageColor(percentage: number): string {
  if (percentage >= 80) return "text-emerald-400";
  if (percentage >= 60) return "text-yellow-400";
  if (percentage >= 40) return "text-orange-400";
  return "text-red-400";
}

export function getFileUsageBadgeClass(percentage: number): string {
  if (percentage >= 80)
    return "bg-emerald-900/30 text-emerald-300 border-emerald-700/50";
  if (percentage >= 60)
    return "bg-yellow-900/30 text-yellow-300 border-yellow-700/50";
  if (percentage >= 40)
    return "bg-orange-900/30 text-orange-300 border-orange-700/50";
  return "bg-red-900/30 text-red-300 border-red-700/50";
}

export function shouldShowFileUsageWarning(
  percentage: number,
  threshold: number = 70
): boolean {
  return percentage < threshold;
}

export function generateSourceTooltipContent(segment: ResponseSegment): string {
  if (segment.type === "generated") {
    return "This content was generated by the AI and may not be directly from your uploaded materials.";
  }

  return `Source: ${segment.sourceDocumentTitle}\nConfidence: ${Math.round(segment.confidence * 100)}%`;
}
